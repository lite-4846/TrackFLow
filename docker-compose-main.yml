version: '3.8'

networks:
  backend-net:
    driver: bridge
  monitoring-net:
    driver: bridge

x-common-env: &common-env
  NODE_ENV: production
  KAFKA_BROKERS: kafka:9093
  CLICKHOUSE_HOST: clickhouse
  CLICKHOUSE_DATABASE: trackflow
  CLICKHOUSE_USER: default
  CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}

services:
  backend:
    build:
      context: ./backend
    container_name: backend
    restart: always
    expose:
      - "8000"
    environment:
      <<: *common-env
      PORT: 8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      kafka:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    networks:
      - backend-net

  consumer:
    build:
      context: ./consumer
    container_name: consumer
    restart: always
    expose:
      - "8002"
    environment:
      <<: *common-env
      PORT: 8002
    depends_on:
      kafka:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    networks:
      - backend-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    expose:
      - "2181"
    volumes:
      - zookeeper-data:/var/lib/zookeeper
    restart: unless-stopped
    networks:
      - backend-net

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_RETENTION_HOURS: 24
    expose:
      - "9093"
    volumes:
      - kafka-data:/var/lib/kafka/data
    restart: unless-stopped
    networks:
      - backend-net

  clickhouse:
    image: clickhouse/clickhouse-server:23.3
    container_name: clickhouse
    environment:
      CLICKHOUSE_DB: trackflow
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    expose:
      - "8123"
      - "9000"
    volumes:
      - clickhouse-data:/var/lib/clickhouse
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8123 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-net

  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=7d'
    networks:
      - monitoring-net
    depends_on:
      backend:
        condition: service_healthy

  grafana:
    image: grafana/grafana:10.4.1
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: false
    networks:
      - monitoring-net
    depends_on:
      - prometheus

volumes:
  zookeeper-data:
  kafka-data:
  clickhouse-data:
  prometheus-data:
  grafana-data:
