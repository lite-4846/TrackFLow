version: '3.8'

networks:
  trackflow:
    driver: bridge

services:
  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - KAFKA_BROKERS=kafka:9093
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_DATABASE=trackflow
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=superman
    depends_on:
      - kafka
      - clickhouse
    networks:
      - trackflow

  # Kafka and Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/var/lib/zookeeper
    restart: unless-stopped
    networks:
      - trackflow

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/var/lib/kafka/data
    restart: unless-stopped
    networks:
      - trackflow

  # ClickHouse
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    environment:
      CLICKHOUSE_DB: trackflow
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: superman
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    ports:
      - "8123:8123"
      - "9000:9000"
    networks:
      - trackflow
    volumes:
      - clickhouse-data:/var/lib/clickhouse
    restart: unless-stopped

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
    depends_on:
      - kafka
      - zookeeper
      - clickhouse
      - backend
    networks:
      - trackflow

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ADMIN_USER=admin
    depends_on:
      - prometheus
    networks:
      - trackflow

  # Kafka Exporter
  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: kafka-exporter
    command:
      - '--kafka.server=kafka:9092'
      - '--web.listen-address=:9308'
    ports:
      - "9308:9308"
    depends_on:
      - kafka
    networks:
      - trackflow

  # Zookeeper Exporter
  zookeeper-exporter:
    image: elkozmon/zoonavigator:latest
    container_name: zookeeper-exporter
    ports:
      - "9001:9000"
    environment:
      - HTTP_PORT=9000
    depends_on:
      - zookeeper
    networks:
      - trackflow

  # ClickHouse Exporter
  clickhouse-exporter:
    image: f1yegor/clickhouse-exporter:latest
    container_name: clickhouse-exporter
    environment:
      - CLICKHOUSE_SERVER=clickhouse:8123
    ports:
      - "9116:9116"
    depends_on:
      - clickhouse
    networks:
      - trackflow

volumes:
  zookeeper-data:
  kafka-data:
  clickhouse-data:
  prometheus-data:
  grafana-data:
    driver: local
